

 x0:
 MOV $0 , x_RET1
 MOV $1 , x
 CLRQ





 WHILE2:
 CMPG 7 , 3 , RES3 
 JIFN RES3 , END_WHILE4

 ADD y , 1 , ADD_RES5 
 MOV ADD_RES5 , x
 IF6:
 CMPG x , y , RES7 
 JIFN RES7 , END_IF8

 DO_WHILE9:


 CMPG x , y , RES10 
 JIF RES10 , DO_WHILE9
 END__DO_WHILE11:
 MOV x , y

 JMP END_IF12:
 END_IF8:
 IF13:
 CMPL x , y , RES14 
 JIFN RES14 , END_IF15

 MOV y , x

 JMP END_IF16:
 END_IF15:

 MOV y , x

 END_IF16:
 END_IF12:

 JMP WHILE2
 END_WHILE4:
 DO_WHILE17:

 ADD y , 1 , ADD_RES18 
 MOV ADD_RES18 , x
 IF19:
 CMPGE x , y , RES20 
 JIFN RES20 , END_IF21

 MOV x , y

 JMP END_IF22:
 END_IF21:
 IF23:
 CMPLE x , y , RES24 
 JIFN RES24 , END_IF25

 MOV y , x

 JMP END_IF26:
 END_IF25:
 IF27:
 CMPE x , y , RES28 
 JIFN RES28 , END_IF29

 MOV y , x

 JMP END_IF30:
 END_IF29:
 END_IF30:
 END_IF26:
 END_IF22:

 CMPG x , y , RES31 
 JIF RES31 , DO_WHILE17
 END__DO_WHILE32:
 WHILE33:
 CMPG x , y , RES34 
 JIFN RES34 , END_WHILE35


 JMP WHILE33
 END_WHILE35:
 MOV 5 , x
 FOR36:
 CMPL x , y , RES37 
 JIFN RES37 , END_FOR38
 ADD x , 1 , ADD_RES39 
 MOV ADD_RES39 , x

 ADD x , 2 , ADD_RES40 
 MOV ADD_RES40 , x
 MUL x , 2 , MUL_RES41 
 MUL x , y , MUL_RES42 
 ADD MUL_RES41 , MUL_RES42 , ADD_RES43 
 MOV ADD_RES43 , y
 MUL x , x , MUL_RES44 
 MUL y , y , MUL_RES45 
 ADD MUL_RES44 , MUL_RES45 , ADD_RES46 
 MOV ADD_RES46 , x

 JMP FOR36
 END_FOR38:
 BIND 0
 JMP x_RET1


